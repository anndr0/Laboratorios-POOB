#BlueJ class context
comment0.target=Replicate
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Replicate\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=xRow\ yColumn\ xPosition\ yPosition\ color
comment1.target=Replicate(int,\ int,\ int,\ int,\ java.lang.String)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Replicate.\r\n\r\n\ @param\ xRow\ The\ number\ of\ rows\ in\ the\ grid.\r\n\ @param\ yColumn\ The\ number\ of\ columns\ in\ the\ grid.\r\n\ @param\ xPosition\ The\ x-coordinate\ of\ the\ cell\ to\ be\ colored.\r\n\ @param\ yPosition\ The\ y-coordinate\ of\ the\ cell\ to\ be\ colored.\r\n\ @param\ color\ The\ color\ of\ the\ cell\ to\ be\ colored.\r\n
comment10.params=
comment10.target=void\ reflectHorizontal()
comment10.text=\r\n\ Reflect\ horizontality\ the\ current\ board.\r\n
comment11.params=
comment11.target=void\ reflectVertical()
comment11.text=\r\n\ Reflect\ verticaly\ the\ current\ board.\r\n
comment2.params=xRow\ yColumn\ color
comment2.target=Replicate(int,\ int,\ java.lang.String)
comment2.text=\r\n\ Constructor\ for\ objects\ of\ class\ Replicate\ (RANDOM).\r\n\r\n\ @param\ xRow\ The\ number\ of\ rows\ in\ the\ grid.\r\n\ @param\ yColumn\ The\ number\ of\ columns\ in\ the\ grid.\r\n\ @param\ color\ The\ color\ of\ the\ cell\ to\ be\ colored.\r\n
comment3.params=xPos\ yPos\ check
comment3.target=void\ changeColor(int,\ int,\ int)
comment3.text=\r\n\ Changes\ the\ color\ of\ the\ hexagon\ at\ the\ specified\ coordinates.\r\n\r\n\ @param\ xPos\ The\ x-coordinate\ of\ the\ hexagon.\r\n\ @param\ yPos\ The\ y-coordinate\ of\ the\ hexagon.\r\n\ @param\ check\ The\ current\ state\ of\ the\ hexagon\ (1\ for\ alive,\ 0\ for\ dead).\r\n
comment4.params=matrix\ xPos\ yPos
comment4.target=int\ neighbor(int[][],\ int,\ int)
comment4.text=\r\n\ Calculates\ the\ number\ of\ neighbors\ of\ a\ cell\ in\ a\ matrix.\r\n\r\n\ @param\ matrix\ The\ matrix\ of\ cells.\r\n\ @param\ xPos\ The\ x-coordinate\ of\ the\ cell.\r\n\ @param\ yPos\ The\ y-coordinate\ of\ the\ cell.\r\n\ @return\ The\ number\ of\ neighbors\ of\ the\ cell.\r\n
comment5.params=xPos\ yPos\ check
comment5.target=void\ updateMatrixOneZero(int,\ int,\ int)
comment5.text=\r\n\ Updates\ the\ state\ of\ a\ cell\ in\ the\ state\ matrix.\r\n\r\n\ @param\ xPos\ The\ x-coordinate\ of\ the\ cell.\r\n\ @param\ yPos\ The\ y-coordinate\ of\ the\ cell.\r\n\ @param\ check\ The\ new\ state\ of\ the\ cell\ (1\ for\ alive,\ 0\ for\ dead).\r\n
comment6.params=
comment6.target=void\ replicate()
comment6.text=\r\n\ Replicates\ the\ state\ of\ the\ grid.\r\n\r\n\ This\ method\ iterates\ over\ the\ grid\ and\ changes\ the\ color\ of\ each\ cell\r\n\ based\ on\ the\ number\ of\ live\ neighbors\ it\ has.\r\n
comment7.params=matrix
comment7.target=void\ invertColumns(int[][])
comment7.text=\r\n\ Inverts\ the\ columns\ of\ a\ matrix.\r\n\r\n\ This\ method\ iterates\ over\ the\ matrix\ and\ swaps\ the\ values\ of\ each\ column\r\n\ with\ the\ values\ of\ the\ corresponding\ column\ in\ the\ opposite\ direction.\r\n\r\n\ @param\ matrix\ The\ matrix\ to\ be\ inverted.\r\n
comment8.params=matrix
comment8.target=void\ invertRows(int[][])
comment8.text=\r\n\ invert\ the\ rows\ of\ a\ matrix\r\n\ @param\ matrix\ to\ be\ inverted\r\n
comment9.params=matrix
comment9.target=void\ newBoard(int[][])
comment9.text=\r\n\ Updates\ the\ board\ based\ on\ the\ current\ state\ of\ the\ matrix.\r\n\r\n\ This\ method\ iterates\ over\ the\ matrix\ and\ changes\ the\ color\ of\ each\ cell\r\n\ in\ the\ grid\ to\ match\ the\ value\ in\ the\ matrix.\r\n\r\n\ @param\ matrix\ The\ matrix\ that\ contains\ the\ current\ state\ of\ the\ board.\r\n
numComments=12
