#BlueJ class context
comment0.target=NPTensor
comment0.text=\ NPTensor.java\r\n\ \r\n\ @Ana\ Mar\u00EDa\ Dur\u00E1n\ y\ Laura\ Natalia\ Rojas\r\n
comment1.params=
comment1.target=NPTensor()
comment1.text=\r\n\ Constructor\ de\ la\ clase\ NPTensor.\r\n\ Inicializa\ un\ mapa\ de\ variables\ y\ establece\ la\ operaci\u00F3n\ inicial\ como\ exitosa.\r\n
comment10.params=name
comment10.target=Tensor\ getValue(java.lang.String)
comment10.text=\r\n\ Obtiene\ el\ valor\ de\ una\ variable\ en\ forma\ de\ tensor.\r\n\r\n\ @param\ name\ Nombre\ de\ la\ variable.\r\n\ @return\ Tensor\ asociado\ a\ la\ variable,\ o\ null\ si\ la\ variable\ no\ existe.\r\n
comment11.params=a\ b\ function
comment11.target=void\ calculate(java.lang.String,\ java.lang.String,\ java.lang.String)
comment11.text=\r\n\ Calcula\ una\ funci\u00F3n\ en\ un\ tensor\ y\ asigna\ el\ resultado\ a\ una\ variable.\r\n\r\n\ @param\ a\ \ \ \ \ \ \ Nombre\ de\ la\ variable\ de\ destino.\r\n\ @param\ b\ \ \ \ \ \ \ Nombre\ de\ la\ variable\ de\ origen.\r\n\ @param\ function\ Funci\u00F3n\ a\ calcular\ (por\ ejemplo,\ "norm"\ o\ "trace").\r\n
comment12.params=a\ b\ scalar
comment12.target=void\ multiplyScalar(java.lang.String,\ java.lang.String,\ int)
comment12.text=\r\n\ Multiplica\ un\ tensor\ por\ un\ escalar\ y\ asigna\ el\ resultado\ a\ una\ variable.\r\n\r\n\ @param\ a\ \ \ \ \ \ Nombre\ de\ la\ variable\ de\ destino.\r\n\ @param\ b\ \ \ \ \ \ Nombre\ de\ la\ variable\ de\ origen.\r\n\ @param\ scalar\ Escalar\ por\ el\ que\ se\ multiplicar\u00E1\ el\ tensor.\r\n
comment2.params=name\ shape\ value
comment2.target=void\ assign(java.lang.String,\ int[],\ int)
comment2.text=\r\n\ Asigna\ un\ tensor\ a\ una\ variable\ con\ todos\ sus\ elementos\ con\ el\ mismo\ valor.\r\n\r\n\ @param\ name\ \ Nombre\ de\ la\ variable.\r\n\ @param\ shape\ Forma\ del\ tensor.\r\n\ @param\ value\ Valor\ con\ el\ que\ se\ llenar\u00E1\ el\ tensor.\r\n
comment3.params=name\ shape\ values
comment3.target=void\ assign(java.lang.String,\ int[],\ int[])
comment3.text=\r\n\ Asigna\ un\ tensor\ a\ una\ variable\ con\ los\ valores\ proporcionados.\r\n\r\n\ @param\ name\ \ \ Nombre\ de\ la\ variable.\r\n\ @param\ shape\ \ Forma\ del\ tensor.\r\n\ @param\ values\ Valores\ del\ tensor.\r\n
comment4.params=a\ unary\ b
comment4.target=void\ assign(java.lang.String,\ java.lang.String,\ java.lang.String)
comment4.text=\r\n\ Asigna\ el\ valor\ de\ una\ operaci\u00F3n\ unaria\ a\ una\ variable.\r\n\r\n\ @param\ a\ \ \ \ \ Nombre\ de\ la\ variable\ de\ destino.\r\n\ @param\ unary\ Operaci\u00F3n\ unaria\ a\ realizar.\r\n\ @param\ b\ \ \ \ \ Nombre\ de\ la\ variable\ de\ origen.\r\n
comment5.params=a\ unary\ b\ parameters
comment5.target=void\ assign(java.lang.String,\ java.lang.String,\ java.lang.String,\ int[])
comment5.text=\r\n\ Asigna\ el\ valor\ de\ una\ operaci\u00F3n\ unaria\ con\ par\u00E1metros\ a\ una\ variable.\r\n\r\n\ @param\ a\ \ \ \ \ \ \ \ \ \ Nombre\ de\ la\ variable\ de\ destino.\r\n\ @param\ unary\ \ \ \ \ \ Operaci\u00F3n\ unaria\ con\ par\u00E1metros\ a\ realizar.\r\n\ @param\ b\ \ \ \ \ \ \ \ \ \ Nombre\ de\ la\ variable\ de\ origen.\r\n\ @param\ parameters\ Par\u00E1metros\ de\ la\ operaci\u00F3n.\r\n
comment6.params=a\ b\ sBinary\ c
comment6.target=void\ assign(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment6.text=\r\n\ Asigna\ el\ valor\ de\ una\ operaci\u00F3n\ binaria\ a\ una\ variable.\r\n\r\n\ @param\ a\ \ \ \ \ \ \ Nombre\ de\ la\ variable\ de\ destino.\r\n\ @param\ b\ \ \ \ \ \ \ Nombre\ de\ la\ primera\ variable\ de\ origen.\r\n\ @param\ sBinary\ Operaci\u00F3n\ binaria\ a\ realizar\ (por\ ejemplo,\ "add",\ "subtract",\ "multiply").\r\n\ @param\ c\ \ \ \ \ \ \ Nombre\ de\ la\ segunda\ variable\ de\ origen.\r\n
comment7.params=variable
comment7.target=java.lang.String\ toString(java.lang.String)
comment7.text=\r\n\ Obtiene\ la\ representaci\u00F3n\ en\ cadena\ de\ un\ tensor.\r\n\r\n\ @param\ variable\ Nombre\ de\ la\ variable\ que\ contiene\ el\ tensor.\r\n\ @return\ Representaci\u00F3n\ en\ cadena\ del\ tensor\ asociado\ a\ la\ variable,\ o\ null\ si\ la\ variable\ no\ existe.\r\n
comment8.params=
comment8.target=boolean\ ok()
comment8.text=\r\n\ Comprueba\ si\ la\ \u00FAltima\ operaci\u00F3n\ fue\ exitosa.\r\n\r\n\ @return\ true\ si\ la\ \u00FAltima\ operaci\u00F3n\ fue\ exitosa,\ false\ en\ caso\ contrario.\r\n
comment9.params=shape
comment9.target=int\ calculateSize(int[])
numComments=13
