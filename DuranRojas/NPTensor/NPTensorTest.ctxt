#BlueJ class context
comment0.target=NPTensorTest
comment0.text=\r\n\ The\ test\ class\ NPTensorTest.\r\n\r\n\ @author\ \ (Ana\ Mar\u00EDa\ Dur\u00E1n\ y\ Laura\ Natalia\ Rojas)\r\n
comment1.params=
comment1.target=void\ setUp()
comment10.params=
comment10.target=void\ shouldSliceTensor()
comment10.text=\r\n\ Prueba\ la\ operaci\u00F3n\ de\ slice\ en\ un\ tensor.\r\n
comment11.params=
comment11.target=void\ shouldCalculateMean()
comment11.text=\r\n\ Prueba\ el\ c\u00E1lculo\ de\ la\ media\ en\ un\ tensor.\r\n
comment12.params=
comment12.target=void\ shouldFindValueInTensor()
comment12.text=\r\n\ Prueba\ la\ b\u00FAsqueda\ de\ un\ valor\ en\ un\ tensor.\r\n
comment13.params=
comment13.target=void\ shouldNotSliceTensorWithIncorrectNumberOfParameters()
comment13.text=\r\n\ Prueba\ que\ no\ se\ pueda\ realizar\ una\ operaci\u00F3n\ de\ slice\ con\ un\ n\u00FAmero\ incorrecto\ de\ par\u00E1metros.\r\n
comment14.params=
comment14.target=void\ shouldAddTwoTensors()
comment14.text=\r\n\ Prueba\ la\ suma\ de\ dos\ tensores.\r\n
comment15.params=
comment15.target=void\ shouldSubtractTwoTensors()
comment15.text=\r\n\ Prueba\ la\ resta\ de\ dos\ tensores.\r\n
comment16.params=
comment16.target=void\ shouldMultiplyTwoTensors()
comment16.text=\r\n\ Prueba\ la\ multiplicaci\u00F3n\ de\ dos\ tensores.\r\n
comment17.params=
comment17.target=void\ shouldNotPerformBinaryOperationWithDifferentShapes()
comment17.text=\r\n\ Prueba\ que\ no\ se\ pueda\ realizar\ una\ operaci\u00F3n\ binaria\ con\ tensores\ de\ formas\ diferentes.\r\n
comment18.params=
comment18.target=void\ shouldCalculateNorm()
comment18.text=\r\n\ Prueba\ el\ c\u00E1lculo\ de\ la\ norma\ en\ un\ tensor.\r\n
comment19.params=
comment19.target=void\ shouldCalculateTrace()
comment19.text=\r\n\ Prueba\ el\ c\u00E1lculo\ de\ la\ traza\ en\ una\ matriz\ cuadrada.\r\n
comment2.params=
comment2.target=void\ shouldAssignTensorWithSameValue()
comment2.text=\r\n\ Prueba\ la\ asignaci\u00F3n\ de\ un\ tensor\ con\ todos\ sus\ elementos\ con\ el\ mismo\ valor.\r\n
comment20.params=
comment20.target=void\ shouldMultiplyMatrixByScalar()
comment20.text=\r\n\ Prueba\ la\ multiplicaci\u00F3n\ de\ una\ matriz\ por\ un\ escalar.\r\n
comment3.params=
comment3.target=void\ shouldAssignTensorWithGivenValues()
comment3.text=\r\n\ Prueba\ la\ asignaci\u00F3n\ de\ un\ tensor\ con\ valores\ espec\u00EDficos.\r\n
comment4.params=
comment4.target=void\ shouldNotAssignMismatchedValues()
comment4.text=\r\n\ Prueba\ que\ no\ se\ pueda\ asignar\ un\ tensor\ con\ valores\ que\ no\ coinciden\ con\ la\ forma\ especificada.\r\n
comment5.params=
comment5.target=void\ shouldNotAssignEmptyShape()
comment5.text=\r\n\ Prueba\ que\ no\ se\ pueda\ asignar\ un\ tensor\ con\ una\ forma\ vac\u00EDa.\r\n
comment6.params=
comment6.target=void\ testAssignShapeOperation()
comment6.text=\r\n\ Prueba\ la\ asignaci\u00F3n\ de\ la\ forma\ de\ un\ tensor.\r\n
comment7.params=
comment7.target=void\ shouldReshapeTensor()
comment7.text=\r\n\ Prueba\ la\ operaci\u00F3n\ de\ reshape\ en\ un\ tensor.\r\n
comment8.params=
comment8.target=void\ shouldAssignShuffledTensor()
comment8.text=\r\n\ Prueba\ la\ asignaci\u00F3n\ de\ un\ tensor\ barajado.\r\n
comment9.params=
comment9.target=void\ shouldNotAssignInvalidUnaryOperation()
comment9.text=\r\n\ Prueba\ que\ no\ se\ pueda\ realizar\ una\ operaci\u00F3n\ unary\ no\ v\u00E1lida.\r\n
numComments=21
